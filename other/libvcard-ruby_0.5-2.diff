--- libvcard-ruby-0.5.orig/debian/changelog
+++ libvcard-ruby-0.5/debian/changelog
@@ -0,0 +1,33 @@
+libvcard-ruby (0.5-2) unstable; urgency=low
+
+  * correct maintainer mail address. 
+
+ -- Philipp Sadleder <philipp@sadleder.de>  Sun, 22 Feb 2004 20:46:48 +0100
+
+libvcard-ruby (0.5-1) unstable; urgency=low
+
+  * New upstream release
+  * Updated mutt_evolution patch, thanks Silvestre.
+
+ -- Philipp Sadleder <philipp@sadleder.de>  Sat, 20 Dec 2003 00:47:55 +0100
+
+libvcard-ruby (0.4-2) unstable; urgency=low
+
+  * Remove build-dependency to libruby and ruby.
+  * Apply add_mutt_alias_output_format from Silvestre Zabala
+    <silvestre.zabala@gmx.net>, providing output in mutt's aliases format.
+
+ -- Philipp Sadleder <philipp.sadleder@web.de>  Mon, 27 Oct 2003 15:22:01 +0100
+
+libvcard-ruby (0.4-1) unstable; urgency=low
+
+  * Initial Release.
+  * Apply patches from Silvestre Zabala <silvestre.zabala@gmx.net> enabling
+    mutt_ab_query to query the Evolution Address Book or a vCard file for
+    vCards (btw: no OS X Address Book in Debian, thus silently removing the
+    interface to it):
+    - ignore_empty_lines patch
+    - query_evolution patch
+
+ -- Philipp Sadleder <philipp.sadleder@web.de>  Mon, 27 Oct 2003 03:01:39 +0100
+
--- libvcard-ruby-0.5.orig/debian/compat
+++ libvcard-ruby-0.5/debian/compat
@@ -0,0 +1 @@
+4
--- libvcard-ruby-0.5.orig/debian/control
+++ libvcard-ruby-0.5/debian/control
@@ -0,0 +1,15 @@
+Source: libvcard-ruby
+Priority: optional
+Maintainer: Philipp Sadleder <philipp@sadleder.de>
+Build-Depends: debhelper (>= 4.0.0), docbook-to-man, dpatch
+Standards-Version: 3.6.0
+
+Package: libvcard-ruby
+Section: libs
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}, ruby (>= 1.8.0-1), libruby (>= 1.8.0-1)
+Description: An implementation of a vCard decoder and encoder
+ It is built on more general RFC2425 support, and can decode
+ iCalendar as well.
+ .
+ Also includes a tool to do vCard based address book queries from Mutt! 
--- libvcard-ruby-0.5.orig/debian/rules
+++ libvcard-ruby-0.5/debian/rules
@@ -0,0 +1,86 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# 3C
+# GNU copyright 1997 to 1999 by Joey Hess.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+# Include dpatch stuff.
+include /usr/share/dpatch/dpatch.make
+
+CFLAGS = -Wall -g
+
+ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
+	CFLAGS += -O0
+else
+	CFLAGS += -O2
+endif
+ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
+	INSTALL_PROGRAM += -s
+endif
+
+# shared library versions, option 1
+version=2.0.5
+major=2
+
+configure: configure-stamp
+configure-stamp:
+	dh_testdir
+	# Add here commands to configure the package.
+	
+	touch configure-stamp
+
+build: build-stamp
+build-stamp: patch-stamp configure-stamp 
+	dh_testdir
+	# Add here commands to compile the package.
+	/usr/bin/docbook-to-man debian/mutt_ab_query.sgml > mutt_ab_query.1
+	
+	touch build-stamp
+
+clean: clean1 unpatch
+clean1:
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp configure-stamp
+	# Add here commands to clean up after the build process.
+	rm -f mutt_ab_query.1
+
+	dh_clean 
+
+install: build
+	dh_testdir
+	dh_testroot
+	dh_clean -k 
+	dh_installdirs
+	# Add here commands to install the package into debian/tmp
+	cp samples/mutt_ab_query.rb $(CURDIR)/debian/libvcard-ruby/usr/bin/mutt_ab_query
+
+# Build architecture-independent files here.
+binary-indep: build install
+# We have nothing to do by default.
+
+# Build architecture-dependent files here.
+binary-arch: build install
+	dh_testdir
+	dh_testroot
+	dh_installchangelogs CHANGELOG
+	dh_installdocs -Xcreated.rid
+	dh_installexamples
+	dh_install lib/vcard.rb usr/lib/ruby/1.8/
+	dh_installman
+	dh_link
+	dh_strip
+	dh_compress
+	dh_fixperms
+	dh_makeshlibs
+	dh_installdeb
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install configure patch unpatch clean1
--- libvcard-ruby-0.5.orig/debian/watch
+++ libvcard-ruby-0.5/debian/watch
@@ -0,0 +1,6 @@
+# Example watch control file for uscan
+# Rename this file to "watch" and then you can run the "uscan" command
+# to check for upstream updates and more.
+# Site		Directory		Pattern			Version	Script
+version=2
+http://www.ensembleindependant.org /sam/	vcard-(.*)\.tgz debian	uupdate
--- libvcard-ruby-0.5.orig/debian/dirs
+++ libvcard-ruby-0.5/debian/dirs
@@ -0,0 +1 @@
+usr/bin
--- libvcard-ruby-0.5.orig/debian/patches/00list
+++ libvcard-ruby-0.5/debian/patches/00list
@@ -0,0 +1,2 @@
+ignore_empty_lines
+evolution_mutt
--- libvcard-ruby-0.5.orig/debian/patches/evolution_mutt.dpatch
+++ libvcard-ruby-0.5/debian/patches/evolution_mutt.dpatch
@@ -0,0 +1,126 @@
+#!/bin/sh -e
+## evolution_mutt.dpatch by Silvestre Zabala <silvestre.zabala@gmx.net>
+##
+## All lines beginning with `## DP:' are a description of the patch.
+## DP: Exchanges the query MacOSX AB query function against a 
+## DP: Ximian Evolution Address Book query function.
+## DP: Adds an option to print the results in Mutt's alias format
+
+if [ $# -ne 1 ]; then
+    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+    exit 1
+fi
+
+[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
+patch_opts="${patch_opts:--f --no-backup-if-mismatch}"
+
+case "$1" in
+       -patch) patch $patch_opts -p1 < $0;;
+       -unpatch) patch $patch_opts -p1 -R < $0;;
+        *)
+                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+                exit 1;;
+esac
+
+exit 0
+
+@DPATCH@
+diff -urNad /home/silvestre/Projekte/libvcard-ruby/libvcard-ruby-0.5/samples/mutt_ab_query.rb libvcard-ruby-0.5/samples/mutt_ab_query.rb
+--- /home/silvestre/Projekte/libvcard-ruby/libvcard-ruby-0.5/samples/mutt_ab_query.rb	2003-11-24 03:58:40.000000000 +0100
++++ libvcard-ruby-0.5/samples/mutt_ab_query.rb	2003-12-20 00:15:52.000000000 +0100
+@@ -16,13 +16,14 @@
+ HELP =<<EOF
+ Usage: mutt_ab_query.rb [--file=<vcf>] [--pipe=<cmd>] [query]
+ 
+-Queries either the OS X Address Book, a vCard file, or a cmd that generates a
++Queries either the Ximian Evolution Address Book, a vCard file, or a cmd that generates a
+ vCard file for vCards that have the query string as contents, and prints the
+ results in Mutt's query result format. Query is optional, if not present all
+ vCards will be matched.
+ 
+ Options
+   -h,--help      Print this helpful message.
++  -a,--alias     Print the results in Mutt's alias_file format
+   -f,--file      A file which contains vcards.
+   -p,--pipe      A command which writes vcards to stdout.
+   -d,--debug     Print debug information.
+@@ -37,12 +38,14 @@
+ 
+ opt_debug = nil
+ opt_file = nil
++opt_alias = false
+ opt_pipe = nil
+ opt_query = nil
+ 
+ opts = GetoptLong.new(
+   [ "--help",    "-h",              GetoptLong::NO_ARGUMENT ],
+   [ "--file",    "-f",              GetoptLong::REQUIRED_ARGUMENT ],
++  [ "--alias",   "-a",              GetoptLong::NO_ARGUMENT ],
+   [ "--pipe",    "-p",              GetoptLong::REQUIRED_ARGUMENT ],
+   [ "--debug",   "-d",              GetoptLong::NO_ARGUMENT ]
+ )
+@@ -56,6 +59,9 @@
+     when "--file" then
+       opt_file = arg
+ 
++    when "--alias" then
++      opt_alias = true
++
+     when "--pipe" then
+       opt_pipe = arg
+ 
+@@ -84,8 +90,10 @@
+     cards
+   end
+ 
+-  def Mutt.vcard_print(cards, title="vcard query results")
+-    puts title
++  def Mutt.vcard_print(cards, title="vcard query results", alias_format=false)
++    unless alias_format
++      puts title
++    end
+ 
+     cards.each {
+       |vcard|
+@@ -105,7 +113,12 @@
+         fields.each {
+           |f|
+           nn = vcard['nickname']
+-          puts "#{f.value}\t#{vcard['fn']}#{nn ? "\t#{nn}" : ""}"
++          if alias_format
++            key = nn ? "#{nn}" : "#{vcard['fn']}".gsub(/\s/,'')
++            puts "alias #{key} #{vcard['fn']} <#{f.value}>"
++          else
++            puts "#{f.value}\t#{vcard['fn']}#{nn ? "\t#{nn}" : ""}"
++          end
+         }
+       end
+     }
+@@ -115,24 +128,17 @@
+ 
+ if opt_pipe
+   file = File.popen(opt_pipe, "r")
+-  cards = Rfc2425::Vcard.decode(file)
+-
+ elsif opt_file
+   file = File.open(opt_file, "r")
+-  cards = Rfc2425::Vcard.decode(file)
+-
+ else
+-  require 'osx-wrappers'
+-
+-  abook = OSX::ABAddressBook.sharedAddressBook
+-
+-  cards = abook.people.to_a.collect { |e| Rfc2425::Vcard.new(e.vCard) }
++  file = File.popen("evolution-addressbook-export")
+ end
+ 
++cards = Rfc2425::Vcard.decode(file)
+ 
+ matches = Mutt::vcard_query(cards, opt_query)
+ 
+ qstr = ARGV.length == 0 ? '<all records>' : ARGV[0];
+ 
+-Mutt::vcard_print(matches, "Query #{qstr} against #{cards.size} vCards:")
++Mutt::vcard_print(matches, "Query #{qstr} against #{cards.size} vCards:", opt_alias)
+ 
--- libvcard-ruby-0.5.orig/debian/patches/ignore_empty_lines.dpatch
+++ libvcard-ruby-0.5/debian/patches/ignore_empty_lines.dpatch
@@ -0,0 +1,37 @@
+#!/bin/sh -e
+## ignore_empty_lines.dpatch by Silvestre Zabala <silvestre.zabala@gmx.net>
+##
+## All lines beginning with `## DP:' are a description of the patch.
+## DP: Fixes vcard.rb to ignore empty lines
+
+if [ $# -ne 1 ]; then
+    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+    exit 1
+fi
+
+[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
+patch_opts="${patch_opts:--f --no-backup-if-mismatch}"
+
+case "$1" in
+       -patch) patch $patch_opts -p1 < $0;;
+       -unpatch) patch $patch_opts -p1 -R < $0;;
+        *)
+                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+                exit 1;;
+esac
+
+exit 0
+
+@DPATCH@
+diff -urNad /home/silvestre/Projekte/libvcard-ruby/libvcard-ruby-0.4/lib/vcard.rb libvcard-ruby-0.4/lib/vcard.rb
+--- /home/silvestre/Projekte/libvcard-ruby/libvcard-ruby-0.4/lib/vcard.rb	2003-10-27 02:30:55.000000000 +0100
++++ libvcard-ruby-0.4/lib/vcard.rb	2003-10-27 02:32:23.000000000 +0100
+@@ -103,7 +103,7 @@
+         # If it's a continuation line, add it to the last.
+         if( line =~ /^[ \t]/ )
+             unfolded << unfolded.pop + line[1, line.size-1]
+-        else
++        elsif (! (line =~ /^$/) ) # Discard empty lines
+           unfolded << line
+         end
+       end
--- libvcard-ruby-0.5.orig/debian/mutt_ab_query.sgml
+++ libvcard-ruby-0.5/debian/mutt_ab_query.sgml
@@ -0,0 +1,181 @@
+<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
+
+<!-- Process this file with docbook-to-man to generate an nroff manual
+     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
+     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
+     less'.  A typical entry in a Makefile or Makefile.am is:
+
+manpage.1: manpage.sgml
+	docbook-to-man $< > $@
+
+    
+	The docbook-to-man binary is found in the docbook-to-man package.
+	Please remember that if you create the nroff version in one of the
+	debian/rules file targets (such as build), you will need to include
+	docbook-to-man in your Build-Depends control field.
+
+  -->
+
+  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
+  <!ENTITY dhfirstname "<firstname>Silvestre</firstname>">
+  <!ENTITY dhsurname   "<surname>Zabala</surname>">
+  <!-- Please adjust the date whenever revising the manpage. -->
+  <!ENTITY dhdate      "<date>2003-10-27</date>">
+  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
+       allowed: see man(7), man(1). -->
+  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
+  <!ENTITY dhemail     "<email>&lt;silvestre.zabala@gmx.net&gt;</email>">
+  <!ENTITY dhusername  "Silvestre Zabala">
+  <!ENTITY dhucpackage "<refentrytitle>MUTT_AB_QUERY</refentrytitle>">
+  <!ENTITY dhpackage   "mutt_ab_query">
+
+  <!ENTITY debian      "<productname>Debian</productname>">
+  <!ENTITY gnu         "<acronym>GNU</acronym>">
+  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
+]>
+
+<refentry>
+  <refentryinfo>
+    <address>
+      &dhemail;
+    </address>
+    <author>
+      &dhfirstname;
+      &dhsurname;
+    </author>
+    <copyright>
+      <year>2003</year>
+      <holder>&dhusername;</holder>
+    </copyright>
+    &dhdate;
+  </refentryinfo>
+  <refmeta>
+    &dhucpackage;
+
+    &dhsection;
+  </refmeta>
+  <refnamediv>
+    <refname>&dhpackage;</refname>
+
+    <refpurpose>Queries either the Evolution Address Book or a vCard file for vCards</refpurpose>
+  </refnamediv>
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>&dhpackage;</command>
+
+      <arg><option>-h, --help</option></arg>
+      <arg><option>-f, --file <replaceable>file</replaceable></option></arg>
+      <arg><option>-d, --debug</option></arg>
+      <arg><replaceable>query</replaceable></arg>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+  <refsect1>
+    <title>DESCRIPTION</title>
+
+    <para>This manual page documents briefly the
+      <command>mutt_ab_query</command> command.</para>
+
+    <para>This manual page was written for the &debian; distribution
+      because the original program does not have a manual page.</para>
+
+    <para><command>&dhpackage;</command> is a program that queries either the Evolution Address Book or a vCard file for vCards that have the query string as contents, and prints the results in Mutt's query result format. Query is optional, if not present all vCards will be matched.</para>
+    <para>If you don't specify a file to be read via the <option>-f</option> option, <command>&dhpackage;</command> will query the Evolution Adress Book by executing <command>evolution-addressbook-export</command> internally. Obviously you need to have that command in your $PATH.</para>
+
+  </refsect1>
+  <refsect1>
+    <title>OPTIONS</title>
+
+    <para>These programs follow the usual &gnu; command line syntax,
+      with long options starting with two dashes (`--').  A summary of
+      options is included below.</para>
+
+    <variablelist>
+      <varlistentry>
+        <term><option>-h</option>
+          <option>--help</option>
+        </term>
+        <listitem>
+          <para>Show summary of options.</para>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>-a</option>
+          <option>--alias</option>
+        </term>
+        <listitem>
+          <para>Print the results in Mutt's alias_file format.</para>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>-f</option>
+          <option>--file</option>
+        </term>
+        <listitem>
+          <para>Specify the file which contains vcards.</para>
+        </listitem>
+      </varlistentry>
+      <varlistentry>
+        <term><option>-d</option>
+          <option>--debug</option>
+        </term>
+        <listitem>
+          <para>Print debug information.</para>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+  <refsect1>
+   <title>EXAMPLE</title>
+  <para>Put in your muttrc file (~/.muttrc):
+
+  <literal>set query_command = "mutt_ab_query '%s'"</literal> and, if you want limited alias support, <literal>source "mutt_ab_query -a|"</literal>
+  </para>
+  </refsect1>
+  <refsect1>
+    <title>SEE ALSO</title>
+
+    <para>mutt(1), evolution-addressbook-export(1),  RFC2426</para>
+  </refsect1>
+  <refsect1>
+    <title>AUTHOR</title>
+
+    <para><command>&dhpackage;</command> was written by Sam Roberts &lt;sroberts@uniserve.com&gt;</para>
+
+    <para>This manual page was written by &dhusername; &dhemail; for
+      the &debian; system (but may be used by others).  Permission is
+      granted to copy, distribute and/or modify this document under
+      the terms of the &gnu; General Public License, Version 2 any 
+	  later version published by the Free Software Foundation.
+    </para>
+	<para>
+	  On Debian systems, the complete text of the GNU General Public
+	  License can be found in /usr/share/common-licenses/GPL.
+	</para>
+
+  </refsect1>
+  <refsect1>
+    <title>BUGS</title>
+    <para>The query is matched against all fields in the vCard. This may lead to unexpected results.</para>
+    <para>The program only works with RFC2426-compliant vCards. Unfortunately Ximian Evolution versions < 2.0 may generate incompliant vCards under some circumstances.</para>
+   </refsect1> 
+
+</refentry>
+
+<!-- Keep this comment at the end of the file
+Local variables:
+mode: sgml
+sgml-omittag:t
+sgml-shorttag:t
+sgml-minimize-attributes:nil
+sgml-always-quote-attributes:t
+sgml-indent-step:2
+sgml-indent-data:t
+sgml-parent-document:nil
+sgml-default-dtd-file:nil
+sgml-exposed-tags:nil
+sgml-local-catalogs:nil
+sgml-local-ecat-files:nil
+End:
+-->
+
+
--- libvcard-ruby-0.5.orig/debian/copyright
+++ libvcard-ruby-0.5/debian/copyright
@@ -0,0 +1,13 @@
+This package was debianized by Philipp Sadleder <philipp.sadleder@web.de> on
+Sun, 26 Oct 2003 00:54:34 +0200.
+
+It was downloaded from http://www.ensembleindependant.org/sam/
+
+Upstream Author: Sam Roberts <sroberts@uniserve.com>
+
+Copyright:
+
+You are free to distribute this software under the terms of
+the GNU General Public License.
+On Debian systems, the complete text of the GNU General Public
+License can be found in the file `/usr/share/common-licenses/GPL'.
--- libvcard-ruby-0.5.orig/debian/libvcard-ruby.manpages
+++ libvcard-ruby-0.5/debian/libvcard-ruby.manpages
@@ -0,0 +1 @@
+mutt_ab_query.1
--- libvcard-ruby-0.5.orig/debian/docs
+++ libvcard-ruby-0.5/debian/docs
@@ -0,0 +1,2 @@
+README
+doc/*
--- libvcard-ruby-0.5.orig/debian/libvcard-ruby.doc-base
+++ libvcard-ruby-0.5/debian/libvcard-ruby.doc-base
@@ -0,0 +1,9 @@
+Document: libvcard-ruby
+Title: libvcard Dokumentation
+Author: Sam Roberts <sroberts@uniserve.com>
+Abstract: 
+Section: Libraries
+
+Format: HTML
+Index: /usr/share/doc/libvcard-ruby/index.html
+Files: /usr/share/doc/libvcard-ruby/*.html /usr/share/doc/libvcard-ruby/*.html
