== 3RD PARTY

todo: a OS X mail plugin that doesn't open a GUI, it just sends mail....

todo: cmd line tool to query KeyStore

todo: cmd line tool to query AddressBook (ex: for phone numbers)
  note: can base it on the lbdb code

todo: RSS

  - add atom to rss/

http://rubyforge.org/projects/daemons

== UNSORTED

iTip protocol binding for IM protocols

http://linux.slashdot.org/article.pl?sid=05/02/15/2228204

http://jwz.livejournal.com/

http://www.groupdav.org/

http://en.wikipedia.org/wiki/Caldav

http://www.imc.org/ietf-calendar/index.html

http://ietf.webdav.org/caldav/

== Data Sources

* SOAP Weather

* Evolution
  http://revolution.rubyforge.org/


== UTILS

Note:
  - WebDAV client-side:
    - http://raa.ruby-lang.org/project/libneon-ruby/
    - http://www.webdav.org/neon/

  - WebDAV server-side:
    - implement a WEBRick servlet to handle server-side?

todo: soap/weather-to-ics

  Query weather reports using SOAP, represent as iCalendars.


todo: ics-alarm
  A really, really fast way of adding an alarm to iCalendar, i.e., 3 min, check the kettle.

  Input:
    - a time offset, and an action

  Output:
    - .ics
    - ical

todo: local-to-rss

  Represent any collection of local files as a podcast, so it can be imported
  into iTunes as a podcast.
 
todo: http-to-rss

  Also, any web location, crawl it for audio, and represent as a podcast.

todo: ics-to-rss
  Input:
  - ~/Library/Calendars/
  - .ics, ../*.ics

  Output:
  - CGI
  - stdout
  - http

  Options:
  - rss versions
  - rss versions in the URL
  - implement autodiscovery with http? what does this mean...

todo: rss-to-jabber

todo: ics-to-ics
  split calendars by date

todo: ics-to-ics
  Input:
  - iCal
  - .ics

  Output:
  - http (subscribable)
  - CAP
  - WebDAV

  Options:
  - particular calendars
  - Rendezvous
  - StartupItem
  - all users, if they have a config file, like web pages
  - combine different calendars, and publish to .mac

    /etc/rc finally launches /sbin/SystemStarter to handle startup items from
    locations such as /System/Library/StartupItems and /Library/StartupItems. A
    StartupItem is a program, usually a shell script, whose name matches the
    folder name. The folder contains a property list file containing key-value
    pairs such as Description, Provides, Requires, OrderPreference, start/stop
    messages etc.  You can run SystemStarter -n -D as root to have the program
    print debugging and dependency information (without actually running
    anything).

todo: rss-to-rss

  See: feedblender - http://feedblender.rubyforge.org

todo: vcf-to-address-book
  Input:
  - .vcf
  - AB

  Output:
  - LDAP?

  AB can subscribe to, at least, ldap sources. Can I use this? Can the latest
  AB have plugins?

done: mutt-aliases-to-vcf
  Input:
  - mutt aliases

  Output
  - .vcf


todo: rss-to-ics   convert rss feed, text or URI, to ics file of todos
  Input:
  - .xml
  - http
  - http with autodiscovery?

  Output:
  - http: a subscribable calendar
  - .ics

  Options:
  - RSS -> VTODO
  - RSS -> VEVENT
  - RSS -> VJOURNAL
  
  Notes:
  - will need a decent ics encoding api



todo: vcf-bday-to-ics.rb
  Input:
  - .vcf
  - AB

  Output:
  - .ics
  - http
  - RSS??! maybe only see bdays within the next month, as a reminder?
  - cvt vcf file to ics file of birthdays
  - pull from Address Book, or from .vcf file

  Options:
  - bday -> VTODO
  - bday -> VEVENT
  - bday +  VALARM


todo:
 - an application server (with plugins?) that can do ALL of the above, live,
   so you can see local iCal as RSS, see remote iCal as RSS, publish
   iCal as RSS, publish iCal as http (&webdav?) (with rendezvous?)

 - web-based config?

 - obj-c config panel?

 - don't have to do it manually, can make iCal auto-subscribe, and make
   NetNewsWire auto-subscribe, etc.


done: vcf-to-mutt
  Input:
  x .vcf
  - AB -> DON'T DO

  Output:
  x mutt aliases
  x Mutt query

  Options:
  - group the output into whatever the AB groups are? DON'T DO
  x use search criteria (like only the "pref" email)


== PACKAGING

- Package:
  - gem
    
  - Port
    
  - debian, done?

Check packaging guidelines:

  http://www.rubygarden.org/ruby?QuickGuideToPackaging

Can I get RAA synced up to rubyforge?

- ri docs during install?

- html docs during install?


== FEATURES

- deal better with BOM, and vCards: http://en.wikipedia.org/wiki/Byte_Order_Mark

- complete RRULE support

- icalendar maker

- streaming decoder

- streaming encoder

  maker, take OUT as a param, append fields using << ? then if it's an IO it will
  be a push encoder, can default to Vcard#create.

- valarms

  - like ones that open apps: http://docs.info.apple.com/article.html?artnum=300368

- vjournal

- value=uri
  -> the value isn't a URI, the URI points to the value, of unknown type! Should
  I allow this to be handled? Maybe use open-uri()?

- add way to delete a param from a Field, maybe assign nil to it? done?

- encoding TEXT, and the NOTE field

== QUESTIONS

- What does Time.local do with the isdst, and tz arguments?

- Time.local()/gm() don't raise errors for out-of-range day-of-month (Feb 31st,
  anyone?)!

- Ask about Date extensions?

- Ask about Time extensions?

+ Ask on ietf-icalendar:

  Errors in examples?


== CLEANUPS/BUGS

-

ensemble:~/p/ruby/vpim % ./rrule.rb --start '20050131T000000Z' 'FREQ=MONTHLY' | head
Start: Mon Jan 31 00:00:00 EST 2005
Rrule: FREQ=MONTHLY
count=  0 Mon Jan 31 00:00:00 EST 2005
count=  1 Mon Feb 28 00:00:00 EST 2005
count=  2 Mon Mar 28 00:00:00 EST 2005
count=  3 Thu Apr 28 00:00:00 EDT 2005
count=  4 Sat May 28 00:00:00 EDT 2005
count=  5 Tue Jun 28 00:00:00 EDT 2005
count=  6 Thu Jul 28 00:00:00 EDT 2005
count=  7 Sun Aug 28 00:00:00 EDT 2005

I need to keep my own date/time, and not use Time as the basic object in my iteration.

Then, I can eliminate non-existent times before yielding them.


- when encoding a Date or Time, set value=date/value=date-time parameter.

- allow preferred to be set to false/nil in vcard/maker

- Need to deal with Date and Time comparisons, see note in time_from_rfc2425. I
  might need to extend the date time comparisons so Date and Time can be
  compared.

- Need to document @properties

- pull common implementation of ical components out into a module/mixin

- Vevent has @fields, and @properties, but @properties has @fields, too.
  Duplication necessary?

- I could do this entirely differently, by adding a to_rfc2445 method to Date,
  Time, DateTime, etc. that return string values, then anybody could add their
  own values, and we'd handle it. But then, what about setting the value type?
  Maybe some kind of table of handlers, per class?

- Time#plusmonth/day should ask itself if it is in utc, then call Time.utc or Time.local
  as appropriate.

- bug: deal with "round down" that Date does when you add a month, and the dofmonth is not
  in valid range -> if you have jan31 repeating monthly with iCal, you shouldn't get an
  occurence in Feb

- do coverage testing: http://rubyforge.org/project/showfiles.php?group_id=18&release_id=360

- guess whether it's a date or a date-time by matching regexes, instead of
  having to provide the default, which I hacked in, its ugly, and we can guess

  Done?

- deal with timezones correctly, iCalendar wants:

     DTSTART:19970714T133000                  ;Local time
     DTSTART:19970714T173000Z                 ;UTC time
     DTSTART;TZID=US-Eastern:19970714T133000  ;Local time and time zone reference

  Done?

- deal with BOM (there's some test vcfs from macnerd2k@yahoo.com in =l.vcard)

- don't allow quoted-printable encodings if version is 3.0

- encoding values with a \n in it will break

  --> generally, make sure not to generate invalid encodings

- return self for true, and for methods that don't have other return values?

- preserve whitespace in a Field?

- support ';' list values (done on encoding, anything to do on decoding?)

- value=text
  in this value, newlines are \n or \N, deal with this when decoding
  (as are ; and ,)

- freeze everything? -> Need to test this.


== DOCUMENTATION

- document examples of how to get
  bday as Time,
  and email,
  a photo,  (done)
  etc...

== VCARD VERSION INTEROP

- Confirm Address Book bugs: PHOTO uses version 2 encoding field, and has too many spaces.

Examine vCard 2.1 interop, and possible trans-encoding.

name=  is optional in a parameter
; can show up in a parameter value, if escaped

quoted-printable can be used to encode values with line breaks

a parameter without an = is usually implicitly a type=, unless
it's one of the encoding types, deal with this on input

- Is   email;internet:sroberts@uniserve.com
valid in vCard2.1? Should I convert it to "type=internet"?

